/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/UDj2L058Cig
 */
// "use client"
// import { Label } from "@/components/ui/label"
// import { Input } from "@/components/ui/input"
// import { Button } from "@/components/ui/button"
// import Link from "next/link"
// import { SelectValue, SelectTrigger, SelectItem, SelectContent, Select } from "@/components/ui/select"
// import { SetStateAction, useState, useRef } from "react"
// import axios from 'axios';

"use client"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { SelectValue, SelectTrigger, SelectItem, SelectContent, Select } from "@/components/ui/select"
import Link from "next/link"
import axios from 'axios';
import React, { useState, useRef, SetStateAction } from 'react';
import Cookies from 'js-cookie';

export function SignIn2() {

  console.log(document.getElementById('printButton'));
  const input = document.getElementById('firstName');

  const [error, setError] = useState<string | null>(null);


  const inputRefGener1 = useRef<HTMLInputElement>(null);
  const inputRefGener2 = useRef<HTMLInputElement>(null);
  const inputRefGener3 = useRef<HTMLInputElement>(null);
  const inputRefActor1 = useRef<HTMLInputElement>(null);
  const inputRefActor2 = useRef<HTMLInputElement>(null);
  const inputRefLatestYear = useRef<HTMLInputElement>(null);
  const inputRefRunTime = useRef<HTMLInputElement>(null);
  const inputRefOrigin = useRef<HTMLInputElement>(null);
  const inputRefStudio = useRef<HTMLInputElement>(null);


  const [selectedeGenre1, setSelectedGenre1] = useState('');
  const [selectedeGenre2, setSelectedGenre2] = useState('');
  const [selectedeGenre3, setSelectedGenre3] = useState('');
  
  const handleChangeGenre1 = (event: { target: { value: SetStateAction<string> } }) => {
    setSelectedGenre1(event.target.value);
  }

  const handleChangeGenre2 = (event: { target: { value: SetStateAction<string> } }) => {
    setSelectedGenre2(event.target.value);
  }

  const handleChangeGenre3 = (event: { target: { value: SetStateAction<string> } }) => {
    setSelectedGenre3(event.target.value);
  }
  
  const apiCall = () => {
    const inputGener1 = selectedeGenre1;
    const inputGener2 = selectedeGenre2;
    const inputGener3 = selectedeGenre3;

    const inputActor1 = inputRefActor1.current?.value;
    const inputActor2 = inputRefActor2.current?.value;
    const inputLatestYear = inputRefLatestYear.current?.value;
    const inputRunTime = inputRefRunTime.current?.value;
    const inputOrigin = inputRefOrigin.current?.value;
    const inputStudio = inputRefStudio.current?.value;


    if (inputGener1) {
      const preferences = {
        Genre1: inputGener1, Genre2: inputGener2, Genre3: inputGener3, Actor1: inputActor1, Actor2: inputActor2,
        LatestYear: inputLatestYear, RunTime: inputRunTime, Origin: inputOrigin, Studio: inputStudio
      };

      // console.log("Cookie")
      // console.log(Cookies.get())
      // console.log(preferences);
      // let token;
      // const name = "token" + "=";
      // const decodedCookie = decodeURIComponent(document.cookie);
      // console.log("decodedCookie")
      // console.log(decodedCookie)
      // const cookieArray = decodedCookie.split(';');
      // console.log("cookieArray:")
      // console.log(cookieArray)
      // let cookie;
      // for (let i = 0; i < cookieArray.length; i++) {
      //   cookie = cookieArray[i];
      //   console.log(cookie)
      //   while (cookie.charAt(0) === ' ') {
      //     cookie = cookie.substring(1);
      //   }
      //   if (cookie.indexOf(name) === 0) {
      //     token = cookie.substring(name.length, cookie.length); // Update token here
      //   }
      // }
      
      // console.log("Token:")
      // console.log(token); // Log the extracted token value
      
      console.log(preferences);
      let token = Cookies.get("token");
      console.log(token);

      
       let preferencesAndToken = { token: token, preferences: preferences };
      axios.post('http://localhost:4000/setPreferences', preferencesAndToken)
        .then(response => {
          console.log("afterPost");
          if (response.status === 200) {
            // Handle success if needed
          } else {
            setError("Bad request. Please check your credentials.");
          }
        })
        .catch(error => {
          setError("An error occurred. Please try again later.");
          console.error('Error:', error);
        });
    }
  
     else {
      console.log("else");
      setError("Please enter a username.");
    }
  };

  return (
    <>
      <div className="px-4 py-16 ">
        <div className="mx-auto max-w-3xl space-y-4">
          <div className="space-y-2">
            <div className="flex justify-between items-center">
              <div className="flex space-x-2">
                <div className="w-3 h-3 rounded-full bg-gray-500" />
                <div className="w-3 h-3 rounded-full bg-gray-300" />
                <div className="w-3 h-3 rounded-full bg-gray-500" />
              </div>
              <p className="text-sm text-gray-100">Stage 2 of 3</p>
            </div>
            <h1 className="text-4xl font-bold text-white">Sign In to CineMate</h1>
            <p className="text-gray-300 ">
              Enter the personal information and movie's preferences you have
            </p>
          </div>
          <div className="py-10 ">
            <h1 className="text-2xl text-white font-semibold">Personal Preferences</h1>
            <div className="grid grid-cols-1 md:grid-cols-1 gap-4">
              <div className="space-y-2">
                <Label htmlFor="favorite-genres" className="text-white" >Favorite Genres</Label>
                <div className=" grid grid-rows-1 grid-cols-3 gap-5">
                  <div className="">
                    <Label htmlFor="spouse-gender" className="text-white">Genre 1</Label>
                    <div>
              <select className = "rounded-lg scale-50 p-4" value={selectedeGenre1} onChange={handleChangeGenre1}>
              <option value="">Select genre1</option>
               <option value="Action">Action</option>
                <option value="Adventure">Adventure</option>
                <option value="Animation">Animation</option>
                <option value="Comedy">Comedy</option>
                <option value="Crime">Crime</option>
                <option value="Documentary">Documentary</option>
                <option value="Drama">Drama</option>
                <option value="Family">Family</option>
                <option value="Fantasy">Fantasy</option>
                <option value="Music">Music</option>
                <option value="Mystery">Mystery</option>
                <option value="Horror">Horror</option>
                <option value="History">History</option>
                <option value="Romance">Romance</option>
                <option value="Science Fiction"></option>
                <option value="Thriller">Thriller</option>
                <option value="War">War</option>
                <option value="Western">Western</option>
              </select>
             </div>
                  </div>
                  <div>
            <Label htmlFor="spouse-gender" className="text-white">Genre 2</Label>
              <select className = "rounded-lg scale-50 p-4"  value={selectedeGenre2} onChange={handleChangeGenre2}>
              <option value="">Select genre1</option>
               <option value="Action">Action</option>
                <option value="Adventure">Adventure</option>
                <option value="Animation">Animation</option>
                <option value="Comedy">Comedy</option>
                <option value="Crime">Crime</option>
                <option value="Documentary">Documentary</option>
                <option value="Drama">Drama</option>
                <option value="Family">Family</option>
                <option value="Fantasy">Fantasy</option>
                <option value="Music">Music</option>
                <option value="Mystery">Mystery</option>
                <option value="Horror">Horror</option>
                <option value="History">History</option>
                <option value="Romance">Romance</option>
                <option value="Science Fiction"></option>
                <option value="Thriller">Thriller</option>
                <option value="War">War</option>
                <option value="Western">Western</option>
              </select>
                  </div>
                  <div>
                    <Label htmlFor="spouse-gender" className="text-white">Genre 3</Label>
                    <select className = "rounded-lg scale-50 p-4"  value={selectedeGenre3} onChange={handleChangeGenre3}>
              <option value="">Select genre1</option>
               <option value="Action">Action</option>
                <option value="Adventure">Adventure</option>
                <option value="Animation">Animation</option>
                <option value="Comedy">Comedy</option>
                <option value="Crime">Crime</option>
                <option value="Documentary">Documentary</option>
                <option value="Drama">Drama</option>
                <option value="Family">Family</option>
                <option value="Fantasy">Fantasy</option>
                <option value="Music">Music</option>
                <option value="Mystery">Mystery</option>
                <option value="Horror">Horror</option>
                <option value="History">History</option>
                <option value="Romance">Romance</option>
                <option value="Science Fiction"></option>
                <option value="Thriller">Thriller</option>
                <option value="War">War</option>
                <option value="Western">Western</option>
              </select>
                  </div>
                </div>
              </div>
            </div>

            <div className=" grid grid-rows-1 grid-cols-2 gap-5">
              <div>
                <Label htmlFor="actor 1" className="text-white">Actor 1</Label>
                <Input ref={inputRefActor1} id="actor1" placeholder="Example: Jeremy Piven" />
              </div>
              <div>
                <Label htmlFor="actor 2" className="text-white">Actor 2</Label>
                <Input ref={inputRefActor2} id="actor2" placeholder="Example: Jenna Ortega" />
              </div>
            </div>
            <div className="space-y-2">
              <Label htmlFor="latest-year" className="text-white">Latest Year</Label>
              <Input ref={inputRefLatestYear} id="latest-year" placeholder="Enter latest year" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="origin" className="text-white">Origin</Label>
              <Input ref={inputRefOrigin} id="origin" placeholder="Enter origin" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="favorite-company" className="text-white">Favorite Film Studio</Label>
              <Input ref={inputRefStudio} id="favorite-company" placeholder="Enter favorite company" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="max-runtime" className="text-white">Maximum Run Time</Label>
              <Input ref={inputRefRunTime} id="max-runtime" placeholder="Enter maximum run time" />
            </div>
          </div>
        </div>
        {/* <Link href="\SignIn\preferences\moviesRating">
          <Button className="w-full p-6 bg-slate-700  text-2xl">Submit</Button>
        </Link> */}
        <button className="w-full p-6 bg-slate-700  text-2xl" onClick={apiCall}>Submit</button>


      </div>
    </>
  )
}
function setInputValue(value: any) {
  throw new Error("Function not implemented.")
}


